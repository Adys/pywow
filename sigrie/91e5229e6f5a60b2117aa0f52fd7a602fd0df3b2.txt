#!/usr/bin/env python
# -*- coding: utf-8 -*-

from optparse import OptionParser
from pywow import wdbc

o = OptionParser()
o.add_option("-b", "--build", type="int", dest="build")
o.add_option("-l", "--locale", type="string", dest="locale", default="enUS")
o.add_option("-v", "--version", type="int", dest="version", default=0)
o.add_option("--max", type="int", dest="max_id", default=100000)
o.add_option("-O", "--out", type="string", dest="out", default="./questcache.fake.wdb")

def main():
	import sys
	args = o.parse_args(sys.argv[1:])[0]
	f = wdbc.new(args.out, build=args.build, structure=wdbc.structures.QuestCache)
	#f.header.wdb4 = 8324
	#f.header.wdb4 = 10444
	#f.header.wdb4 = 10452
	#f.header.wdb4 = 10468
	#f.header.wdb4 = 12065
	#f.header.wdb4 = 12588
	#f.header.wdb4 = 13104
	f.header.wdb4 = 13124
	f.header.wdb5 = 3
	f.header.version = args.version
	f.header.locale = args.locale[::-1]
	
	for i in range(args.max_id / 4):
		boilerplate = {
			"_id": i+1,
			"id_2": i+1,
			"tag": 2,
			"level": 2,
			"category": 9,
			"money_reward": 25,
			"money_reward_cap": 90,
			"flags": 8,
			"name": "Kobold Camp Cleanup",
			"objective": "Kill 10 Kobold Vermin, then return to Marshal McBride.",
			"required_kill_1": i*4+1,
			"required_kill_amount_1": 1,
			"required_kill_2": i*4+2,
			"required_kill_amount_2": 2,
			"required_kill_3": i*4+3,
			"required_kill_amount_3": 3,
			"required_kill_4": i*4+4,
			"required_kill_amount_4": 4,
		}
		f.setRow(i, **boilerplate)
	
	f.write()
	print "Written to %r" % (args.out)

if __name__ == "__main__":
	main()
